{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Holberton/comfama-interview/find-your-anime/src/components/SingleAnime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Grid, Typography, Paper, Link } from '@material-ui/core';\nimport './SingleAnime.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleAnime = props => {\n  _s();\n\n  const {\n    title,\n    image_url,\n    episodes,\n    rating,\n    airing,\n    broadcast,\n    score,\n    url\n  } = props.info;\n  useEffect(() => {\n    console.log(title, image_url);\n  }, [title, image_url]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 10,\n    direction: \"row\",\n    justify: \"center\",\n    alignItems: \"center\",\n    alignContent: \"center\",\n    className: \"singleAnime__container\",\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image_url,\n        alt: title,\n        className: \"singleAnime__image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: \"singleAnime__description\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h2\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Airing: \", String(airing)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Broadcast: \", broadcast]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Rating: \", rating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          component: \"h2\",\n          children: [\"Episodes: \", episodes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          component: \"button\",\n          vatiant: \"body1\",\n          href: url,\n          children: \"My Anime List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SingleAnime, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SingleAnime;\nexport default SingleAnime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleAnime\");","map":{"version":3,"sources":["/home/alejandro/Holberton/comfama-interview/find-your-anime/src/components/SingleAnime.js"],"names":["React","useEffect","Grid","Typography","Paper","Link","SingleAnime","props","title","image_url","episodes","rating","airing","broadcast","score","url","info","console","log","String"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,KAA3B,EAAkCC,IAAlC,QAA8C,mBAA9C;AACA,OAAO,mBAAP;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AACJC,IAAAA,KADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,SANI;AAOJC,IAAAA,KAPI;AAQJC,IAAAA;AARI,MASAR,KAAK,CAACS,IATZ;AAUEf,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ,EAAmBC,SAAnB;AACD,GAFQ,EAEN,CAACD,KAAD,EAAQC,SAAR,CAFM,CAAT;AAGF,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AACA,IAAA,OAAO,EAAE,EADT;AAEA,IAAA,SAAS,EAAC,KAFV;AAGA,IAAA,OAAO,EAAC,QAHR;AAIA,IAAA,UAAU,EAAC,QAJX;AAKA,IAAA,YAAY,EAAC,QALb;AAMA,IAAA,SAAS,EAAC,wBANV;AAAA,4BAOE,QAAC,IAAD;AAAA,6BACE;AAAK,QAAA,GAAG,EAAEA,SAAV;AAAqB,QAAA,GAAG,EAAED,KAA1B;AAAiC,QAAA,SAAS,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE,QAAC,IAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,CAAlB;AAAqB,QAAA,SAAS,EAAC,0BAA/B;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,oBACGA;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,iCACWW,MAAM,CAACP,MAAD,CADjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,gCACUE,KADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAUE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,oCACcD,SADd;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF,eAaE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,iCACWF,MADX;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAyB,UAAA,SAAS,EAAC,IAAnC;AAAA,mCACaD,QADb;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAmBE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAyB,UAAA,OAAO,EAAC,OAAjC;AAAyC,UAAA,IAAI,EAAEK,GAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CApDD;;GAAMT,W;;KAAAA,W;AAsDN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { Grid, Typography, Paper, Link } from '@material-ui/core';\nimport './SingleAnime.css'\n\nconst SingleAnime = (props) => {\n  const { \n    title, \n    image_url,\n    episodes,\n    rating, \n    airing, \n    broadcast, \n    score, \n    url, \n    } = props.info\n    useEffect(() => {\n      console.log(title, image_url)\n    }, [title, image_url])\n  return (\n    <Grid container \n    spacing={10} \n    direction=\"row\" \n    justify=\"center\" \n    alignItems=\"center\" \n    alignContent=\"center\"\n    className=\"singleAnime__container\">\n      <Grid>\n        <img src={image_url} alt={title} className=\"singleAnime__image\" />\n      </Grid>\n      <Grid>\n        <Paper elevation={3} className=\"singleAnime__description\">\n          <Typography variant=\"h4\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Airing: {String(airing)}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Score: {score}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Broadcast: {broadcast}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Rating: {rating}\n          </Typography>\n          <Typography variant=\"h5\" component=\"h2\">\n            Episodes: {episodes}\n          </Typography>\n          <Link component=\"button\" vatiant=\"body1\" href={url}>\n            My Anime List\n          </Link>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SingleAnime;"]},"metadata":{},"sourceType":"module"}