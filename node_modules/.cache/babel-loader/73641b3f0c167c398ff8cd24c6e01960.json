{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Holberton/comfama-interview/find-your-anime/src/pages/Results.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useState } from 'react';\nimport AnimeList from '../components/AnimeList';\nimport { SearchContext } from '../context/search';\nimport { Box, Typography, Grid, Paper } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SingleAnime = props => {\n  const {\n    score\n  } = props.info;\n};\n\n_c = SingleAnime;\n\nconst Results = () => {\n  _s();\n\n  const search = useContext(SearchContext);\n  const [dataExists, setDataExists] = useState(true);\n  useEffect(() => {\n    if (search.animeData === undefined || search.animeData.length === 0) {\n      try {\n        search.setData(JSON.parse(localStorage.getItem('myData')));\n        setDataExists(true);\n      } catch (error) {\n        console.log(error);\n        setDataExists(false);\n      }\n    }\n  }, [search]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 2,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      alignContent: \"center\",\n      alignItems: \"center\",\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          children: [\"Average score of all the anime\\u2019s seasons: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), dataExists && /*#__PURE__*/_jsxDEV(AnimeList, {\n      data: search.animeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this) || /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Data does not exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 64\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Results, \"ePbQc5J5kCfLQg4C8+3TKlhwP1k=\");\n\n_c2 = Results;\nexport default Results;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SingleAnime\");\n$RefreshReg$(_c2, \"Results\");","map":{"version":3,"sources":["/home/alejandro/Holberton/comfama-interview/find-your-anime/src/pages/Results.js"],"names":["React","useEffect","useContext","useState","AnimeList","SearchContext","Box","Typography","Grid","Paper","SingleAnime","props","score","info","Results","search","dataExists","setDataExists","animeData","undefined","length","setData","JSON","parse","localStorage","getItem","error","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,EAAgCC,KAAhC,QAA6C,mBAA7C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AACJC,IAAAA;AADI,MAEAD,KAAK,CAACE,IAFZ;AAGD,CAJD;;KAAMH,W;;AAMN,MAAMI,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAMC,MAAM,GAAGb,UAAU,CAACG,aAAD,CAAzB;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,IAAD,CAA5C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,MAAM,CAACG,SAAP,KAAqBC,SAArB,IAAkCJ,MAAM,CAACG,SAAP,CAAiBE,MAAjB,KAA4B,CAAlE,EAAqE;AACnE,UAAI;AACFL,QAAAA,MAAM,CAACM,OAAP,CAAeC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAf;AACAR,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD,OAHD,CAGE,OAAOS,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAT,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF;AACF,GAVQ,EAUN,CAACF,MAAD,CAVM,CAAT;AAWA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,IAAI,MAApB;AAAqB,MAAA,YAAY,EAAC,QAAlC;AAA2C,MAAA,UAAU,EAAC,QAAtD;AAA+D,MAAA,OAAO,EAAC,QAAvE;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,MAAX;AAAA,+BACE,QAAC,UAAD;AAAA,wEAC6CH,KAD7C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAQII,UAAU,iBAAI,QAAC,SAAD;AAAW,MAAA,IAAI,EAAED,MAAM,CAACG;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAf,iBAAwD,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAR3D;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA3BD;;GAAMJ,O;;MAAAA,O;AA6BN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext, useState } from 'react';\nimport AnimeList from '../components/AnimeList';\nimport { SearchContext } from '../context/search'\nimport { Box, Typography, Grid, Paper } from '@material-ui/core'\n\nconst SingleAnime = (props) => {\n  const { \n    score, \n    } = props.info;\n}\n\nconst Results = () => {\n  const search = useContext(SearchContext)\n  const [dataExists, setDataExists] = useState(true)\n\n  useEffect(() => {\n    if (search.animeData === undefined || search.animeData.length === 0) {\n      try {\n        search.setData(JSON.parse(localStorage.getItem('myData')));\n        setDataExists(true);\n      } catch (error) {\n        console.log(error);\n        setDataExists(false);\n      }\n    }\n  }, [search]);\n  return (\n    <Box mt={2}>\n      <Grid container item alignContent=\"center\" alignItems=\"center\" justify=\"center\">\n        <Paper item>\n          <Typography>\n            Average score of all the animeâ€™s seasons: {score}\n          </Typography>\n        </Paper>\n      </Grid>\n      {(dataExists && <AnimeList data={search.animeData}/>) || <Typography variant=\"h4\">Data does not exist</Typography>}\n    </Box>\n  );\n};\n\nexport default Results;"]},"metadata":{},"sourceType":"module"}