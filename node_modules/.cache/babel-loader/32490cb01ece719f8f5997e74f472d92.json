{"ast":null,"code":"var _jsxFileName = \"/home/alejandro/Holberton/comfama-interview/find-your-anime/src/components/AnimeCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { SearchContext } from '../context/search';\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport './AnimeCard.css';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AnimeCard = PropTypes => {\n  _s();\n\n  const history = useHistory();\n  const search = useContext(SearchContext);\n\n  const onClickHandler = () => {\n    fetch(`https://api.jikan.moe/v3/anime/${props.anime.mal_id}`).then(response => response.json()).then(data => {\n      search.setSingle(data);\n      localStorage.setItem('singleData', JSON.stringify(data));\n      history.push('/single-view');\n    });\n  };\n\n  const title = props.anime.title.length > 15 ? `${props.anime.title.substring(0, 15)}...` : props.anime.title;\n  const imageUrl = props.anime.image_url;\n  const synopsis = props.anime.synopsis.length > 30 ? `${props.anime.synopsis.substring(0, 30)}...` : props.anime.synopsis;\n  const Score = props.anime.score;\n  Card.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    inverse: PropTypes.bool,\n    color: PropTypes.string,\n    body: PropTypes.bool,\n    className: PropTypes.string\n  };\n  CardBody.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardColumns.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardDeck.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardFooter.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardGroup.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardHeader.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardImg.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n    top: PropTypes.bool,\n    bottom: PropTypes.bool\n  };\n  CardImgOverlay.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardLink.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n    innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  };\n  CardSubtitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardText.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  CardTitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: \"/assets/318x180.svg\",\n        alt: \"Card image cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n          tag: \"h5\",\n          children: \"Card title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n          tag: \"h6\",\n          className: \"mb-2 text-muted\",\n          children: \"Card subtitle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardText, {\n          children: \"Some quick example text to build on the card title and make up the bulk of the card's content.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          children: \"Button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AnimeCard, \"7vjG1BzNMViaBtkhIN82QlR39bM=\", false, function () {\n  return [useHistory];\n});\n\n_c = AnimeCard;\nexport default AnimeCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AnimeCard\");","map":{"version":3,"sources":["/home/alejandro/Holberton/comfama-interview/find-your-anime/src/components/AnimeCard.js"],"names":["React","useContext","SearchContext","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","useHistory","AnimeCard","PropTypes","history","search","onClickHandler","fetch","props","anime","mal_id","then","response","json","data","setSingle","localStorage","setItem","JSON","stringify","push","title","length","substring","imageUrl","image_url","synopsis","Score","score","propTypes","tag","oneOfType","func","string","inverse","bool","color","body","className","CardColumns","CardDeck","CardFooter","CardGroup","CardHeader","top","bottom","CardImgOverlay","CardLink","innerRef"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { SearchContext } from '../context/search';\nimport {\n  Card, CardImg, CardText, CardBody,\n  CardTitle, CardSubtitle, Button\n} from 'reactstrap';\nimport './AnimeCard.css'\nimport { useHistory } from 'react-router';\n\nconst AnimeCard = (PropTypes) => {\n  const history = useHistory();\n  const search = useContext(SearchContext);\n\n\n  const onClickHandler = () => {\n    fetch(`https://api.jikan.moe/v3/anime/${props.anime.mal_id}`)\n    .then((response) => response.json())\n    .then((data) => {\n      search.setSingle(data);\n      localStorage.setItem('singleData', JSON.stringify(data));\n      history.push('/single-view')\n    });\n  };\n\n  const title = props.anime.title.length > 15 ? `${props.anime.title.substring(0, 15)}...` : props.anime.title;\n  const imageUrl = props.anime.image_url;\n  const synopsis = props.anime.synopsis.length > 30 ? `${props.anime.synopsis.substring(0, 30)}...` : props.anime.synopsis;\n  const Score = props.anime.score;\n\n  Card.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    inverse: PropTypes.bool,\n    color: PropTypes.string,\n    body: PropTypes.bool,\n    className: PropTypes.string\n  };\n  \n  CardBody.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardColumns.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardDeck.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardFooter.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardGroup.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardHeader.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardImg.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // Use top or bottom to position image via \"card-img-top\" or \"card-img-bottom\"\n    top: PropTypes.bool,\n    bottom: PropTypes.bool\n  };\n  \n  CardImgOverlay.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardLink.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string,\n    // ref will only get you a reference to the CardLink component, use innerRef to get a reference to the DOM element (for things like focus management).\n    innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  };\n  \n  CardSubtitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardText.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n  \n  CardTitle.propTypes = {\n    // Pass in a Component to override default element\n    tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n    className: PropTypes.string\n  };\n\n  return (\n    <div>\n      <Card>\n        <CardImg top width=\"100%\" src=\"/assets/318x180.svg\" alt=\"Card image cap\" />\n        <CardBody>\n          <CardTitle tag=\"h5\">Card title</CardTitle>\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">Card subtitle</CardSubtitle>\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\n          <Button>Button</Button>\n        </CardBody>\n      </Card>\n    </div>\n  );\n};\n\nexport default AnimeCard;"]},"metadata":{},"sourceType":"module"}